// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name LeapSDK
import AVFoundation
import Foundation
import LeapCoreSDK
import Swift
import UIKit
import WebKit
@objc public protocol LeapCallback : ObjectiveC.NSObjectProtocol {
  @objc func eventNotification(eventInfo: Swift.Dictionary<Swift.String, Any>)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class Leap : ObjectiveC.NSObject {
  @objc public static let shared: LeapSDK.Leap
  @objc weak public var callback: LeapSDK.LeapCallback? {
    @objc get
    @objc set
  }
  @discardableResult
  @objc public func withBuilder(_ apiKey: Swift.String) -> LeapSDK.Leap?
  @discardableResult
  @objc public func addProperty(_ key: Swift.String, stringValue: Swift.String) -> LeapSDK.Leap
  @discardableResult
  @objc public func addProperty(_ key: Swift.String, intValue: Swift.Int) -> LeapSDK.Leap
  @discardableResult
  @objc public func addProperty(_ key: Swift.String, dateValue: Foundation.Date) -> LeapSDK.Leap
  @objc public func start()
  @objc public func flush()
  @objc public func start(_ apiKey: Swift.String)
  @objc public func start(_ apiKey: Swift.String, projectId: Swift.String)
  @objc public func startProject(_ projectId: Swift.String)
  @objc public func disable()
  @objc public func addIdentifier(identifier: Swift.String, value: Any)
  @objc deinit
}
